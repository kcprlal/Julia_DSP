function rozwiazanie(;
    a::Float64=-0.88,
    b::Float64=1.1,
    x::Vector{Float64}=[0.7, 0.67743, 0.65485, 0.63228, 0.60971, 0.58713, 0.56456, 0.54199, 0.51941, 0.49684, 0.47427, 0.45169, 0.42912, 0.40655, 0.38397, 0.3614, 0.33883, 0.31625, 0.29368, 0.27111, 0.24853, 0.22596, 0.20339, 0.18081, 0.15824, 0.13567, 0.11309, 0.09052, 0.06795, 0.04537, 0.0228, 0.00023, -0.02235, -0.04492, -0.06749, -0.09007, -0.11264, -0.13521, -0.15779, -0.18036, -0.20293, -0.22551, -0.24808, -0.27065, -0.29323, -0.3158, -0.33837, -0.36095, -0.38352, -0.40609, -0.42867, -0.45124, -0.47381, -0.49639, -0.51896, -0.54153, -0.56411, -0.58668, -0.60926, -0.63183, -0.6544, -0.67698, -0.69955, -0.72212, -0.7447, -0.76727, -0.78984, -0.81242, -0.83499, -0.85756, -0.88014, 1.09729, 1.07472, 1.05214, 1.02957, 1.007, 0.98442, 0.96185],
)
    L = range(; start=a, stop=b, length=2^5)
    quantize(L::AbstractVector)::Function = x -> L[argmin(abs.(-L .+ x))]
    q = quantize(L)
    x_quantized = q.(x)
    quantization_error = x .- x_quantized
    energy = sum(abs2, quantization_error)
    return energy
    0.025959334412591073
end
energy = rozwiazanie()

    
    
